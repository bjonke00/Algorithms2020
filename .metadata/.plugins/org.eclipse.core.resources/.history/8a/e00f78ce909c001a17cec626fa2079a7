package com.codekata.binarychop;

import static org.junit.Assert.assertEquals;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import org.junit.Test;

public class BinaryChopTest3 {

	private BinaryChop3 binaryChop = new BinaryChop3();
	
	
	@Test
	public void test_multithreaded() {
		
		int[] answers = new int[] {3,3,1,-1,8,9,-1,10,-1});
		
		Arrays.sort(answers);
		
		assertEquals(answers, binaryChop.binaryChop(33, new int[] { 0, 1, 21, 33, 45, 45, 61, 71, 72, 73 }));
		assertEquals(3, binaryChop.binaryChop(111, new int[] { 1, 5, 23, 111 }));
		assertEquals(1, binaryChop.binaryChop(5, new int[] { 1, 5, 23, 111 }));
		assertEquals(-1, binaryChop.binaryChop(35, new int[] { 1, 5, 23, 111 }));
		assertEquals(8, binaryChop.binaryChop(72, new int[] { 0, 1, 21, 33, 45, 45, 61, 71, 72, 73 }));
		assertEquals(9, binaryChop.binaryChop(73, new int[] { 0, 1, 21, 33, 45, 45, 61, 71, 72, 73 }));
		assertEquals(-1, binaryChop.binaryChop(70, new int[] { 0, 1, 21, 33, 45, 45, 61, 71, 72, 73 }));
		assertEquals(10, binaryChop.binaryChop(355, new int[] { 0, 1, 21, 33, 45, 45, 61, 71, 72, 73, 355 }));
		assertEquals(-1, binaryChop.binaryChop(354, new int[] { 0, 1, 21, 33, 45, 45, 61, 71, 72, 73, 355 }));
	}

}
